unit_types {
  brave {
    movement_points: 1
    combat:          1
    tile:            brave
  }

  armed_brave {
    movement_points: 1
    combat:          2
    tile:            armed_brave
  }

  mounted_brave {
    movement_points: 4
    combat:          2
    tile:            mounted_brave
  }

  mounted_warrior {
    movement_points: 4
    combat:          3
    tile:            mounted_warrior
  }
}

dwelling_types {
  camp {
    radius:         small
    name_singular:  camp
    name_plural:    camps
  }

  village {
    radius:         small
    name_singular:  village
    name_plural:    villages
  }

  city {
    radius:         large
    name_singular:  city
    name_plural:    cities
  }
}

tribes {
  apache {
    name_singular:  Apache
    name_plural:    Apaches
    name_posessive: Apache
    civilized:      semi_nomadic
    dwelling_type:  camp
    dwelling_tile:  camp
    flag_color:     '#C2AE85'
    max_population: 3
    max_population_capital: 3
  }

  sioux {
    name_singular:  Sioux
    name_plural:    Sioux
    name_posessive: Sioux
    civilized:      semi_nomadic
    dwelling_type:  camp
    dwelling_tile:  camp
    flag_color:     '#910000'
    max_population: 3
    max_population_capital: 3
  }

  tupi {
    name_singular:  Tupi
    name_plural:    Tupis
    name_posessive: Tupi
    civilized:      semi_nomadic
    dwelling_type:  camp
    dwelling_tile:  camp
    flag_color:     '#035D03'
    max_population: 3
    max_population_capital: 3
  }

  arawak {
    name_singular:  Arawak
    name_plural:    Arawaks
    name_posessive: Arawak
    civilized:      agrarian
    dwelling_type:  village
    dwelling_tile:  village
    flag_color:     '#6989C2'
    max_population: 5
    max_population_capital: 5
  }

  cherokee {
    name_singular:  Cherokee
    name_plural:    Cherokees
    name_posessive: Cherokee
    civilized:      agrarian
    dwelling_type:  village
    dwelling_tile:  village
    flag_color:     '#74A54C'
    max_population: 5
    max_population_capital: 5
  }

  iroquois {
    name_singular:  Iroquois
    name_plural:    Iroquois
    name_posessive: Iroquois
    civilized:      agrarian
    dwelling_type:  village
    dwelling_tile:  village
    flag_color:     '#6B3B18'
    max_population: 5
    max_population_capital: 5
  }

  aztec {
    name_singular:  Aztec
    name_plural:    Aztecs
    name_posessive: Aztec
    civilized:      civilized
    dwelling_type:  city
    dwelling_tile:  tan_pyramid
    flag_color:     '#C6A21F'
    max_population: 7
    max_population_capital: 8
  }

  inca {
    name_singular:  Inca
    name_plural:    Incas
    name_posessive: Inca
    civilized:      civilized
    dwelling_type:  city
    dwelling_tile:  grey_pyramid
    flag_color:     '#F6F3C7'
    max_population: 9
    max_population_capital: 11
  }
}

flag_rects {
  camp: [
    # teepee left.
    { origin={ x=11, y=20 }, size={ w=1, h=2} },
    { origin={ x=14, y=20 }, size={ w=1, h=2} },
    { origin={ x=12, y=21 }, size={ w=2, h=2} },
    # teepee middle.
    { origin={ x=19, y=16 }, size={ w=1, h=2} },
    { origin={ x=23, y=16 }, size={ w=1, h=2} },
    { origin={ x=20, y=17 }, size={ w=3, h=2} },
    # teepee right.
    { origin={ x=29, y=20 }, size={ w=1, h=2} },
    { origin={ x=33, y=20 }, size={ w=1, h=2} },
    { origin={ x=30, y=21 }, size={ w=3, h=2} },
  ]

  village: [
    # Left house.
    { origin={ x=12, y=21 }, size={ w=4, h=2} },
    # Right house.
    { origin={ x=25, y=26 }, size={ w=4, h=2} },
  ]

  city: [
  ]
}

# Describes behaviors having to do with native alarm level. Note
# that there is dwelling-level alarm and tribal alarm, and the
# names will specify which one is being referred to.
alarm {
  # TODO: This needs to somehow be calibrated against the orig-
  # inal game.
  max_dwelling_alarm_for_teaching: 50
}

# Configures how each dwelling is assigned an expertise for
# teaching.
dwelling_expertise {
  # When we are computing the dwelling expertise we need to com-
  # pute the production quantity of each outdoor job on each sur-
  # rounding tile. This map determines whether we should do that
  # assuming an expert (true) or a free colonist (false). This
  # makes a difference because it will change the relative pro-
  # portions of produced quantities from the various jobs and
  # thus change the weights.
  production_from_expert {
    food:    false
    fish:    false
    sugar:   false
    tobacco: false
    cotton:  false
    fur:     false
    lumber:  false
    ore:     false
    # We use an expert to compute silver production because this
    # game does not allow free colonists to produce silver from
    # regular mountain squares with no resource, and so this
    # helps to boost the number a bit since we don't need to rely
    # on the (rare) occasion where a dwelling is surrounded by a
    # silver prime resource.
    silver:  true
  }

  # After the base weights are computed based on production vol-
  # ume, they will be further scaled by these values in order to
  # make the frequencies more closely match those of the original
  # game.
  scale_factors {
    semi_nomadic {
      farming:          1
      fishing:          1
      sugar_planting:   60
      tobacco_planting: 15
      cotton_planting:  10
      fur_trapping:     10
      ore_mining:       0
      silver_mining:    0
      fur_trading:      0
      scouting:         30
    }

    agrarian {
      farming:          3
      fishing:          6
      sugar_planting:   20
      tobacco_planting: 6
      cotton_planting:  4
      fur_trapping:     7
      ore_mining:       8
      silver_mining:    0
      fur_trading:      7
      scouting:         13
    }

    civilized {
      farming:          50
      fishing:          65
      sugar_planting:   2.6
      tobacco_planting: 0.4
      cotton_planting:  0.3
      fur_trapping:     0.7
      ore_mining:       8
      silver_mining:    200
      fur_trading:      10
      scouting:         1
    }
  }

  # After all of the outdoor production-based weights are com-
  # puted the probability of the fur trading expertise will still
  # be zero because it is not derived from outdoor production. So
  # a fur trading weight will be generated that is equal to the
  # weight of fur trapping multiplied by this fraction, which
  # will normally be smaller than one.
  fur_trader_fraction: .1

  # After all of the production-based weights are computed the
  # probability of the scouting expertise will still be zero be-
  # cause it is not derived from production. So the a scouting
  # weight will be generated that is equal to T*F*S, where T is
  # the sum of all weights, F is the fraction ([0,1]) of sur-
  # rounding tiles that are forested (since the OG seems to only
  # teaching scouting when the dwelling is surrounded one or more
  # forested tiles) and S is the below scale factor that will
  # normally be larger than one.
  seasoned_scout_scale: .1
}
