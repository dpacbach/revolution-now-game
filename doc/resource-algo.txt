---------------------------------------------------
Algo
---------------------------------------------------

1. Take row of coordinate.
2. Add constant random term to it.
3. idx = Mod 64
4. shift = shifts[idx % 4], where shifts=[0,4,9,12]
5. lookup  = (shift + idx/4) % 16

approach 1:
6. pattern = patterns[lookup]
7. start   = starts[lookup]
8. ...

approach 2:
6. rotation = rotations[lookup]
7. resource = (resources[(x+rotation) % 64] == true)

rotations:  7 25 38 50 61 13 22 34  45  57  16  18  40  41  54   2
rotations:  7 25 38 50 61 77 86 98 109 121 144 146 168 169 182 194
            ^           ^                ^           ^

resources: 0  7  17  24  34  41  47  58  (64)

 starts:    0 5 3 4 3 4 2 7 2 7 1 6 1 6 0 5
#patterns:  2 4 5 7 8 2 3 5 6 8 2 3 5 6 7 1
 patterns:  1 3 4 6 7 1 2 4 5 7 1 2 4 5 6 0
            ^       ^         ^     ^
 shifts:    0       4         9     12

---------------------------------------------------
Patterns
---------------------------------------------------

1:  7  10  7  10  7  6
2:     10  7  10  7  6  11
3:         7  10  7  6  11  6
4:            10  7  6  11  6  7
5:                7  6  11  6  7  10
6:                   6  11  6  7  10  7
7:                      11  6  7  10  7  10
8:                          6  7  10  7  10  7

    7  10  7  10  7  6  11 = 58 = 56+2

    7  10  7  10  7  6  11  6 = 64 = 2^6

    7  10  7  10  7  6  11  6  7  10  7  10  7  6  11  6  7  10  7  10  7  6  11  6  7  10  7  10  7  6  11  6

starts:
3 4
3 4
2 7
2 7
1 6
1 6
0 5
0 5

patterns:
1 3
4 6
7 1
2 4
5 7
1 2
4 5
6 0

rotation:
7 25 38 50 61 13 22 34 45 57 16 18 40 41 54 2

monotonic rotation:
7 25 38 50 61 77 86 98 109 121 144 146 168 169 182 194
-  7 25 38 50 61 77 86  98 109 121 144 146 168 169 182 194
----------------------------------------------------------
7 18 13 12 11 16  9 12  11  12  23   2  22   1  13  12
---------- -----------  --------------  --------------
   50          48             48              48

rotation:   7 25 38 50 61 13 22 34 45 57 16 18 40 41 54  2
 starts:    0  5  3  4  3  4  2  7  2  7  1  6  1  6  0  5
#patterns:  2  4  5  7  8  2  3  5  6  8  2  3  5  6  7  1
 patterns:  1  3  4  6  7  1  2  4  5  7  1  2  4  5  6  0
