# ===============================================================
# TODO
# ===============================================================

  1. Implement proper unit type handling mechanism.
  2. Allow transitioning units between types, e.g. giving a free
     colonist muskets and turning them into a soldier.
  3. OpenGL

# ===============================================================
# Serialization
# ===============================================================

  1. Move all global save-game data into one giant data structure
     and get all the SG stuff out of the individual modules.

  2. Add struct w/ reflection to Rds and redo flatbuffers struct
     and table serialization to make use of it. This will also
     allow serializing game data to other formats. Add an Rcl de-
     serializer for structs using this also. One challenge here
     will be how to make a struct reflected but also have methods
     that can be used to maintain invariants. Also, such classes
     can be nested.

  3. Add sumtype reflection to Rds (which will also require that
     the structs comprising the alternatives be reflected using
     the mechanism from \#2 above). Then write an Rcl deserial-
     izer for sumtypes and use it to remove the manual implemen-
     tations in the utype module.

# ===============================================================
# Type Safety
# ===============================================================

  1. Consider making `Commodity` move-only in order to enforce
     via the type system that commodities don't accidentally get
     created or destroyed except by sanctioned means. If a com-
     modity needs to be split, there can be a new method added
     onto it to break it up.

# ===============================================================
# Lua
# ===============================================================

  1. Add support for equality of userdata types in Lua. By de-
     fault a usertype should get an __equal metamethod that
     throws a Lua error when attempting to compare with anything,
     unless the cpp type is equality comparable, in which case it
     should get a proper comparison method.
  2. Create proper Lua API design in order to avoid coupling with
     the C++ modules.
  3. Generate Flatbuffers Lua modules so that Lua can read and
     write game save files.
  4. Add some other standard containers like vector,
     unordered_map, etc.

# ===============================================================
# Bugs
# ===============================================================

Low priority:

  - When we toggle from fullscreen to non-fullscreen the mouse
    position is a bit off. This is probably some kind of SDL
    issue where the window thinks that it is in a different posi-
    tion than where it is displayed on screen (off by about 10-20
    pixels). As soon as the window position is moved slightly (by
    dragging) then it is observed to self-correct. Somehow, after
    restoring the window, we need to tell the window to update
    itself.

# ===============================================================
# Build System
# ===============================================================

  - Add support for precompiled headers.  CMake recently added
    this feature and it should be available in a version post
    3.15.x (probably 3.16+).  See:

      https://gitlab.kitware.com/cmake/cmake/commit/fa36e2151d25358c7946a53c4440f0487210770d

  - Add Windows support.

# ===============================================================
# Infrastructure
# ===============================================================

  - Consider replacing any string-joining stuff with fmt::join,
    but first see if it will be included in C++20.

  - Add a generic texture cache to the cache module that can
    cache textures. It will also support pruning and/or automatic
    regeneration.

  - Add a cache to the cache module that invalidates when the
    scaling is changed. This may not be necessary since, as of
    now, it seems possible to write code that will work and ad-
    just to any scale.

# ===============================================================
# UI
# ===============================================================

  - Minimap

# ===============================================================
# Rendering
# ===============================================================

  - Fix handling of multiple units on a square with rendering.

  - Animate water.

# ===============================================================
# Basic Game Mechanics
# ===============================================================

  - Fix handling of multiple units on a square with combat.
  - Finish ship combat

  List of basic game mechanics:

    * All Units

        x sentry
        - goto
        x wait / forfeight
        x moving to friendly squares
        x click on unit to clear orders / open orders window.
        x disband

    * Land Units

        x fortifying
        x military unit attacking military unit
        x military unit attacking civilian
        - military unit attacking trade wagon / treasure
        - unit moving into lost city

    * Ships

        - ship attacking ship (evade, damage, sink)
        - privateer stealth

    * Land Units + Ships

        x ship holding units
        x land unit boarding ship
        x landfall
        - treasure boarding ship

# ===============================================================
# Game Replay
# ===============================================================

  - replay?

# ===============================================================
# Old World View
# ===============================================================

  - Determine layout of europe background image
  - high seas
  - player gold
  - tax rate
  - unit immigration
  - purchasing units

# ===============================================================
# Terrain
# ===============================================================

  - movement affected by terrain
  - pioneer plow
  - pioneer road

# ===============================================================
# Colonies
# ===============================================================

  - Determine layout of europe background image

# ===============================================================
# Game Narrative
# ===============================================================

  - game year/season
  - royal army

# ===============================================================
# Graphics Engine
# ===============================================================

  - Remove color palette from config, it's kind of rediculous.
