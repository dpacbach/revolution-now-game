# ===============================================================
# player.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-02-11.
#
# Description: RDS definitions for the player module.
#
# ===============================================================
# Revolution Now
include "coord.hpp"

# Rds
include "fathers.rds.hpp"
include "old-world-state.rds.hpp"
include "nation.rds.hpp"

namespace "rn"

struct.Player {
  # Somewhat just for convenience.
  nation 'e_nation',

  human 'bool',

  money 'int',

  # How many crosses has this player accumulated. Note that this
  # gets subtracted from each time a new immigrant arrives on the
  # docks, so it is not cumulative beyond that. The number of
  # crosses needed to produce an immigrant depends on a number of
  # factors, plus some randomness.
  crosses 'int',

  # The state of all things related to the old world, king, euro-
  # pean market prices, etc.
  old_world 'OldWorldState',

  # When the new world is first discovered this will have a value
  # and will be the name given to the new world by the player.
  discovered_new_world 'maybe<std::string>',

  independence_declared 'bool',

  # Anything related to founding fathers is in here.
  fathers 'FoundingFathersState',

  # This holds the source square of the most recent ship that
  # sailed the high seas. This is needed so that if a ship is in
  # europe and it got there without sailing from the new world,
  # then this square will be used to place it when it arrives in
  # the new world for the first time. If the unit sails to europe
  # from the new world then this coordinate will not be used; in
  # that case, the unit will return to the square from which it
  # sailed. Theoretically this always needs to have a meaninful
  # value, and so at the start of the game it should just be set
  # to the player starting position.
  last_high_seas 'Coord',
}
