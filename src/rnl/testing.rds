--[[ ------------------------------------------------------------
|
| testing.rds
|
| Project: Revolution Now
|
| Created by dsicilia on 2020-11-02.
|
| Description: RDS definitions for unit testing.
|
--]] ------------------------------------------------------------
-- Revolution Now
include'maybe.hpp'

-- C++ standard library
include'<string>'
include'<vector>'

-- This is included because MyVariant2 is serializable.
include'fb/testing_generated.h'

namespace'rnltest'

-- Descriptive comment.
Maybe = template{ 'T' }.sumtype{
  alt{ nothing={} }, --
  alt{ just={ var{ val='T' } } }
}

MyVariant0 = sumtype{}

-- Descriptive comment.
MyVariant1 = sumtype{
  alt{ happy={ var{ p='std::pair<char,int>' } } },
  alt{
    sad={
      var{ hello='bool' }, --
      var{ ptr='bool*' }
    }
  },
  alt{ excited={} },

  [features_key]={ 'equality' }
}

MyVariant2 = sumtype{
  alt{
    first={
      var{ name='std::string' }, --
      var{ b='bool' }
    }
  },
  alt{
    second={
      var{ flag1='bool' }, --
      var{ flag2='bool' }
    }
  },
  alt{ third={ var{ cost='int' } } },

  [features_key]={ 'formattable', 'serializable' }
}

namespace'rnltest.inner'

MyVariant3 = sumtype{
  alt{ a1={ var{ var0='MyVariant0_t' } } }, --
  alt{
    a2={
      var{ var1='MyVariant0_t' }, --
      var{ var2='MyVariant2_t' }
    }
  }, --
  alt{ a3={ var{ c='char' } } }
}

-- Descriptive comment.
MyVariant4 = sumtype{
  -- Alternatives.
  alt{
    first={
      var{ i='int' }, --
      var{ c='char' }, --
      var{ b='bool' }, --
      var{ op='rn::maybe<uint32_t>' }
    }
  }, --
  alt{ _2nd={} }, --
  alt{
    third={
      var{ s='std::string' }, --
      var{ var3='MyVariant3_t' }
    }
  }
}

-- Descriptive comment.
TemplateTwoParams = template{ 'T', 'U' }.sumtype{
  -- Alternatives.
  alt{
    first_alternative={
      var{ t='T' }, --
      var{ c='char' }
    }
  }, --
  alt{ second_alternative={} }, --
  alt{
    third_alternative={
      var{ hello='Maybe_t<T>' }, --
      var{ u='U' }
    }
  }
}

-- This one has two template parameters are references another
-- sumtype that also has two parameters.
CompositeTemplateTwo = template{ 'T', 'U' }.sumtype{
  alt{
    first={ var{ ttp='rnltest::inner::TemplateTwoParams_t<T,U>' } }
  }, --
  alt{ second={} }
}

namespace'rn'

MySumtype = sumtype{
  alt{ none={} },
  alt{
    some={
      var{ s='std::string' }, --
      var{ y='int' }
    }
  },
  alt{ more={ var{ d='double' } } },

  [features_key]={ 'equality', 'formattable', 'serializable' }
}

OnOffState = sumtype{
  alt{ off={} },
  alt{ on={ var{ user='std::string' } } },
  alt{ switching_on={ var{ percent='double' } } },
  alt{ switching_off={ var{ percent='double' } } },

  [features_key]={ 'equality', 'formattable', 'serializable' }
}

OnOffEvent = sumtype{
  alt{ turn_off={} }, --
  alt{ turn_on={} }
}

e_empty = enum{}

e_single = enum{ 'hello' }

e_two = enum{ 'hello', 'world' }

e_color = enum{ 'red', 'green', 'blue' }

e_hand = enum{ 'left', 'right' }