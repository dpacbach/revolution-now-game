# ===============================================================
# testing.rnl
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-02.
#
# Description: RNL definitions for unit testing.
#
# ===============================================================
import some_other_rnl_module;

include "some_other_hpp_header";

namespace rn;
namespace rn._;

# Descriptive comment.
sumtype Monostate {};

# Descriptive comment.
sumtype Maybe {
  .template: T, U;

  nothing:
  just:
    T val;
};

sumtype MyVariant0 {
  .features:
    formattable;

  # Comment on last line.
};

# Descriptive comment.
sumtype MyVariant1 {
  first_alternative:
  second_alternative:
    bool hello;
  third_alternative:
};

sumtype MyVariant2 {
  .features: formattable;

  first_alternative: std::string name; bool b;
  second_alternative:
    bool flag1;
    bool flag2;
  third_alternative:
    int cost;
};

namespace rn.util  ;

sumtype MyVariant3 {
  .features:
    serializable;

  first_alternative:
    MyVariant1 var1;
  second_alternative:
    MyVariant1 var1;
    MyVariant2 var2;
  third_alternative:
    char* ptr;
};

# Descriptive comment.
sumtype MyVariant4 {
  # List of features.
  .features:
    serializable,
    formattable;

  # Alternatives.
  first_alternative:
    int i;
    char c;
    MyClass<T>* hello;
  second_alternative:
  third_alternative:
    string s;
    MyVariant3 var3;
};

# Descriptive comment.
sumtype TemplateTwoParams {
  .template:
    T, U;

  # List of features.
  .features:
    serializable,
    formattable;

  # Alternatives.
  first_alternative:
    T t;
    char c;
  second_alternative:
  third_alternative:
    U u;
};