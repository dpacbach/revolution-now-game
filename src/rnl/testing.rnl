# ===============================================================
# testing.rnl
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-02.
#
# Description: RNL definitions for unit testing.
#
# ===============================================================
#import some_other_rnl_module;

include <string>;
include <variant>;
include <vector>;

# This is included because MyVariant2 is serializable.
include "fb/testing_generated.h";

namespace rnltest;

# Descriptive comment.
sumtype Maybe {
  .template: T;
  .features:
    formattable,
    comparison;

  nothing:
  just:
    T val;
};

# Descriptive comment.
sumtype Monostate {};

sumtype MyVariant0 {
  .features:
    formattable;

  # Comment on last line.
};

# Descriptive comment.
sumtype MyVariant1 {
  .features: comparison;

  happy:
    std::pair<char,int> p;
  sad:
    bool hello;
    bool* ptr;
  excited:
};

sumtype MyVariant2 {
  .features:
    formattable,
    serializable;

  first:
    std::string name;
    bool b;
  second:
    bool flag1;
    bool flag2;
  third:
    int cost;
};

namespace rnltest.inner  ;

sumtype MyVariant3 {
  .features:
    formattable;

  a1:
    MyVariant0_t var0;
  a2:
    MyVariant0_t var1;
    MyVariant2_t var2;
  a3:
    char c;
};

# Descriptive comment.
sumtype MyVariant4 {
  # List of features.
  .features:
    formattable;

  # Alternatives.
  first:
    int i;
    char c;
    bool b;
    std::optional<uint32_t> op;
  _2nd:
  third:
    std::string s;
    MyVariant3_t var3;
};

# Descriptive comment.
sumtype TemplateTwoParams {
  .template:
    T, U;

  # List of features.
  .features:
    formattable,
    comparison;

  # Alternatives.
  first_alternative:
    T t;
    char c;
  second_alternative:
  third_alternative:
    Maybe_t<T> hello;
    U u;
};

# This one has two template parameters are references another
# sumtype that also has two parameters.
sumtype CompositeTemplateTwo {
  .template: T, U;

  .features:
    formattable;

  first:
    rnltest::inner::TemplateTwoParams_t<T,U> ttp;
  second:
};