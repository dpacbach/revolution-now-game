// **************************************************************
// sg-land-view.fbs
//
// Project: Revolution Now
//
// Created by dsicilia on 2019-10-29.
//
// Description: Serializable types for the sg-land-view module.
//
// **************************************************************
include "color.fbs";
include "coord.fbs";
include "land-view.fbs";
include "orders.fbs";
include "physics.fbs";
include "unit.fbs";
include "utype.fbs";
include "viewport.fbs";
include "vocab.fbs";

namespace fb;

namespace fb.LandViewState;

  table none {}
  table ui {
    s_future : no_serial;
  }
  table blinking_unit {
    id          : int;
    add_to_back : [int];
  }
  table input_ready {
    consumed : bool;
    response : no_serial;
  }
  table sliding_unit {
    id          : int;
    target      : Coord;
    percent     : double;
    percent_vel : DissipativeVelocity;
  }
  table depixelating_unit {
    id             : int;
    demoted        : Opt_e_unit_type;
  }

  namespace fb;

  table LandViewState_t {
    none              : LandViewState.none;
    ui                : LandViewState.ui;
    blinking_unit     : LandViewState.blinking_unit;
    input_ready       : LandViewState.input_ready;
    sliding_unit      : LandViewState.sliding_unit;
    depixelating_unit : LandViewState.depixelating_unit;
  }

namespace fb.LandViewAnim;

  table none {}
  table move {
    id : int;
    d  : e_direction;
  }
  table attack {
    attacker      : int;
    defender      : int;
    attacker_wins : bool;
    dp_anim       : e_depixelate_anim;
  }

  namespace fb;

  table LandViewAnim_t {
    none   : LandViewAnim.none;
    move   : LandViewAnim.move;
    attack : LandViewAnim.attack;
  }

namespace fb;

table LandViewFsm {
  state_stack : [LandViewState_t];
}

table SG_LandView {
  mode     : LandViewFsm;
  anim     : LandViewAnim_t;
  viewport : SmoothViewport;
}
