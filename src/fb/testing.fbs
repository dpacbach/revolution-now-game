// **************************************************************
// testing.fbs
//
// Project: Revolution Now
//
// Created by dsicilia on 2019-10-13.
//
// Description: Serializable types for the unit tests.
//
// **************************************************************
include "coord.fbs";
include "vocab.fbs";

namespace fb.MySumtype;

table none {}
table some {
  s : string;
  y : int;
}
table more {
  d : double;
}

namespace fb;

table MySumtype_t {
  none : MySumtype.none;
  some : MySumtype.some;
  more : MySumtype.more;
}

enum e_hand:byte {
  Left,
  Right
}

enum e_color:byte {
  Red,
  Green,
  Blue
}

table Weapon {
  name   : string;
  damage : short;
}

struct Vec2 {
  x : float;
  y : float;
}

struct Vec3 {
  x : float;
  y : float;
  z : float;
}

struct Pair_Vec2_int {
  fst : Vec2;
  snd : int;
}

table Pair_int_Weapon {
  fst : int;
  snd : Weapon;
}

table SetTester {
  set : [string];
}

table MapTester1 {
  map : [Pair_string_int];
}

table MapTester2 {
  map : [Pair_int_int];
}

table MyVariant {
  one   : int;
  two   : Vec2;
  three : Weapon;
  four  : e_color;
}

table MyFlatQueues {
  q1 : [int];
  q2 : [string];
  dq : [int];
}

table Pair_Coord_String {
  fst : Coord;
  snd : string;
}

table Matrix_String {
  size : Delta;
  data : [Pair_Coord_String];
}

namespace fb.OnOffState;

  table off           {}
  table on            { user    : string; }
  table switching_on  { percent : double; }
  table switching_off { percent : double; }

  namespace fb;

  table OnOffState_t {
    off           : OnOffState.off;
    on            : OnOffState.on;
    switching_on  : OnOffState.switching_on;
    switching_off : OnOffState.switching_off;
  }

table OnOffFsm {
  state_stack : [OnOffState_t];
}

table Monster {
  pos       : Vec3;
  mana      : short = 150;
  hp        : short = 100;
  name      : string;
  names     : [string];
  friendly  : bool = false (deprecated);
  inventory : [ubyte];
  color     : e_color = Blue;
  hand      : e_hand;
  weapons   : [Weapon];
  path      : [Vec3];
  pair1     : Pair_string_int;
  pair2     : Pair_Vec2_int;
  map_vecs  : [Pair_Vec2_int];
  map_strs  : [Pair_string_int];
  map_wpns  : [Pair_int_Weapon];
  mylist    : [string];
  myset     : [string];
}

namespace fb.MyVariant2;

  table first  {
    name  : string;
    b     : bool;
  }
  table second {
    flag1 : bool;
    flag2 : bool;
  }
  table third {
    cost  : int;
  }

  namespace fb;

  table MyVariant2_t {
    first  : MyVariant2.first;
    second : MyVariant2.second;
    third  : MyVariant2.third;
  }
