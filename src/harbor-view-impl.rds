# ===============================================================
# harbor-view.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-13.
#
# Description: RDS definitions for the harbor-view module.
#
# ===============================================================
# Revolution Now
include "maybe.hpp"

# gs
include "ss/cargo.hpp"
include "ss/commodity.rds.hpp"
include "ss/unit-id.hpp"

namespace "rn"

# This object needs to specify all of the information necessary
# for a dragged item to be drawn. We cannot simply use a tile
# here because we need to know where the item came from so that
# it can (potentially) be left out when rendering the scene, to
# create the appearance that the mouse is dragging it.
sumtype.HarborDraggableObject2 {
  unit {
    id 'UnitId',
  },
  market_commodity {
    type 'e_commodity',
  },
  cargo_commodity {
    comm 'Commodity',
    slot 'CargoSlotIndex',
  },

  _features {
    equality
  }
}

sumtype.HarborDragSrc {
  dock {
    id 'UnitId',
  },
  cargo {
    slot 'CargoSlotIndex',
    quantity 'maybe<int>',
  },
  outbound {
    id 'UnitId',
  },
  inbound {
    id 'UnitId',
  },
  inport {
    id 'UnitId',
  },
  market {
    type 'e_commodity',
    quantity 'maybe<int>',
  },
}

sumtype.HarborDragDst {
  cargo {
    slot 'CargoSlotIndex',
  },
  dock {},
  outbound {},
  inbound {},
  inport {},
  inport_ship {
    id 'UnitId',
  },
  market {},
}

