# ===============================================================
# colony.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-06-06.
#
# Description: Config info for colonies (non-production).
#
# ===============================================================
# Rds
include "colony-enums.rds.hpp"
include "unit-type.rds.hpp"

# refl
include "refl/enum-map.hpp"

# cdr
include "cdr/ext-base.hpp"
include "cdr/ext-builtin.hpp"
include "cdr/ext-std.hpp"

# base
include "base/maybe.hpp"

# C++ standard library
include "<string>"

namespace "rn"

struct.Warehouses {
  # Maximum amount of non-food quantity of a commodity that can
  # be stored in a colony with no warehouses.
  default_max_quantity 'int',

  # Maximum amount of non-food quantity of a commodity that can
  # be stored in a colony with a warehouse.
  warehouse_max_quantity 'int',

  # Maximum amount of non-food quantity of a commodity that can
  # be stored in a colony with a warehouse expansion.
  warehouse_expansion_max_quantity 'int',

  # The original game doesn't seem to impose a limit on the
  # amount of food that can be stored. This could partially be to
  # allow exceeding 100 without a warehouse in order to get to
  # 200 which is needed to create a new colonist.
  food_max_quantity 'int',

  _features { validation, equality }
}

struct.config_colony_outdoors {
  job_names 'refl::enum_map<e_outdoor_job, std::string>',
}

# How many of each are needed for a given construction project.
struct.ConstructionMaterials {
  hammers 'int',
  tools   'int',
}

# Note that this config is for non-production related things. For
# production-related things there is a dedicated config file.
struct.config_colony_t {
  warehouses 'Warehouses',

  food_for_creating_new_colonist 'int',

  # The maximum number of people that be placed in each (indoor)
  # colony building.
  max_workers_per_building 'int',

  # When a colony is founded it will get this set of buildings
  # for free.
  initial_colony_buildings 'std::unordered_set<e_colony_building>',

  outdoors 'config_colony_outdoors',

  # All buildings are theoretically buildable, and this will
  # specify how many hammers and tools are needed for each.
  materials_for_building 'refl::enum_map<e_colony_building, ConstructionMaterials>',

  # This gives the list of units that are buildable in a colony
  # as well as how many hammers and tools are needed for each.
  materials_for_unit 'refl::enum_map<e_unit_type, base::maybe<ConstructionMaterials>>',

  building_display_names 'refl::enum_map<e_colony_building, std::string>',

  _features { validation, equality }
}

config.colony {}
