# ===============================================================
# market.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-08-21.
#
# Description: Config info for market prices.
#
# ===============================================================
# ss
include "ss/commodity.rds.hpp"
include "ss/difficulty.rds.hpp"
include "ss/nation.rds.hpp"

# refl
include "refl/cdr.hpp"
include "refl/enum-map.hpp"

# cdr
include "cdr/ext-builtin.hpp"

namespace "rn.config.market"

struct.PriceLimits {
  # Upper/lower bounds on the starting value of the bid price.
  bid_price_start_min 'int',
  bid_price_start_max 'int',

  # Upper and lower bounds on the possible range of bid prices.
  bid_price_min 'int',
  bid_price_max 'int',

  # The amount added to the bid price to get the ask price. In
  # the original game this has a fixed value for each commodity
  # that never changes. In the original game's config file, this
  # is referred to as "burden" (actually their value is one less
  # than ours since it doesn't include the baseline spread of 1).
  bid_ask_spread 'int',

  _features { validation, equality },
}

struct.EconomicModel {
  rise       'int',
  fall       'int',
  attrition  'int',
  volatility 'int',

  _features { validation, equality },
}

struct.MarketCommodity {
  price_limits     'PriceLimits',
  model_parameters 'EconomicModel',
}

struct.PriceGroup {
  bid_price_min 'int',
  bid_price_max 'int',
  rise_fall     'int',
  volatility    'int',
  target_price  'int',

  _features { validation, equality },
}

struct.NationAdvantage {
  attrition_scale   'double',
  sell_volume_scale 'double',
  buy_volume_scale  'double',

  _features { validation, equality },
}

struct.DifficultyModifiers {
  human_traffic_volume_scale     'double',
  non_human_traffic_volume_scale 'double',
}

namespace "rn"

struct.config_market_t {
  price_behavior 'refl::enum_map<e_commodity, config::market::MarketCommodity>',

  processed_goods_model 'config::market::PriceGroup',

  nation_advantage 'refl::enum_map<e_nation, config::market::NationAdvantage>',

  difficulty_modifiers 'refl::enum_map<e_difficulty, config::market::DifficultyModifiers>',
}

config.market {}
