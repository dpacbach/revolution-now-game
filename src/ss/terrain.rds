# ===============================================================
# gs-terrain.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-02-13.
#
# Description: RDS definitions for the gs-terrain module.
#
# ===============================================================
# ss
include "ss/colony-id.hpp"
include "ss/map-square.rds.hpp"
include "ss/matrix.hpp"
include "ss/nation.rds.hpp"

# gfx
include "gfx/coord.rds.hpp"

# refl
include "refl/enum-map.hpp"

# base
include "base/maybe.hpp"

namespace "rn"

enum.e_barricade_type {
  stockade,
  fort,
  fortress,
}

# All of the visual characteristics of a colony that need to be
# recorded to implement the fog of war.
struct.FogColony {
  # Note that this ID may no longer exist if the colony has since
  # been abandoned! That said, the game should never reuse such
  # IDs, so it is safe to check if a colony with the given ID ex-
  # ists or not and, if it does, it is the colony originally re-
  # ferred to.
  id 'ColonyId',
  nation 'e_nation',
  name 'std::string',
  population 'int',
  barricade_type 'base::maybe<e_barricade_type>',
}

# All of the visual characteristics of a square that need to be
# recorded to implement the fog of war.
struct.FogSquare {
  square 'MapSquare',
  colony 'base::maybe<FogColony>',
}

# What each player sees. Some tiles may not be visible, and
# others might not be up to date with the real map.
struct.PlayerTerrain {
  map 'Matrix<base::maybe<FogSquare>>',
}

namespace "rn.wrapped"

struct.TerrainState {
  placement_seed 'int',

  player_terrain 'refl::enum_map<e_nation, base::maybe<PlayerTerrain>>',

  world_map 'Matrix<MapSquare>',

  # For rendering purposes it is necessary to know the contents
  # of squares that are "off of the map edge." These will specify
  # that for each map edge. Note that squares off of the map edge
  # are not accessible to units and don't actually exist.
  proto_squares 'refl::enum_map<e_cardinal_direction, MapSquare>',
}
