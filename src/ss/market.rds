# ===============================================================
# market.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2022-08-23.
#
# Description: Rds definitions for the ss/market module.
#
# ===============================================================
# ss
include "ss/commodity.rds.hpp"

# refl
include "refl/enum-map.hpp"

namespace "rn"

struct.MarketItem {
  # When multiplied by 100 this is the price that you get when
  # selling 100 tons of a commodity in Europe (that would be at
  # zero tax rate; since taxes are subtracted, you will generally
  # get less than this).
  #
  # In the original game the bid/ask spread is fixed for each
  # commodity. Most have a spread of 100, while some have a very
  # large spread (e.g. food has a spread of 800). That is the
  # reason that we don't have an ask price here, since it can al-
  # ways be derived from this.
  #
  # In the original game this was always in the range [0, 19].
  bid_price_in_hundreds 'int',

  # Is there an active boycott for this.
  boycott 'bool',

  # This is the net accumulated traffic (quantity sold to europe)
  # since the last price change. So each time it increases (de-
  # creases) beyond a rise (fall) threshold, the number will be
  # modded by that and the price will be increased/decreased ac-
  # cordingly. It will decrease when commodities are purchased
  # (and for this reason it can be negative for commodities that
  # are typically only bought). Note that there may be a small
  # amount of randomess incorporated into this value so that
  # price rises/drops are not totally predictable.
  traffic_since_last_price_change 'int',

  _features { equality, validation }
}

struct.MarketState {
  commodities 'refl::enum_map<e_commodity, MarketItem>',
}
