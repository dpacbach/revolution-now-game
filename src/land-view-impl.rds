# ===============================================================
# land-view-impl.rds
#
# Project: Revolution Now
#
# Created by dsicilia on 2020-11-13.
#
# Description: RDS definitions for the land-view module.
#
# ===============================================================
# Revolution Now
include "input.hpp"
include "physics.hpp"
include "unit-id.hpp"

# Rds
include "orders.rds.hpp"

# gfx
include "gfx/coord.hpp"

namespace "rn"

sumtype.LandViewMode {
  none {},
  unit_input {
    unit_id 'UnitId',
  },
  unit_move {
    unit_id 'UnitId',
  },
  unit_attack {
    attacker 'UnitId',
    defender 'UnitId',
    attacker_wins 'bool',
  },
  colony_disappearing {
    colony_id 'ColonyId',
  },
  hidden_terrain {},
}

sumtype.LandViewRawInput {
  orders {
    orders 'orders_t',
  },
  tile_click {
    coord 'Coord',
    mods 'input::mod_keys',
  },
  center {}, # Center on blinking unit, if any.
  next_turn {},
  hidden_terrain {},
  leave_hidden_terrain {},
  european_status {},
  escape {},
}

# These are animation primitives. A unit "move" is a slide, and a
# unit attack sequence is constructed from a slide + depixela-
# tion.
# FIXME: change the name of this.
sumtype.UnitAnimation {
  blink {
    visible 'bool',
  },
  slide {
    target 'Coord',
    percent 'double',
    percent_vel 'DissipativeVelocity',
  },
  depixelate_unit {
    type 'e_depixelate_anim',
    stage 'double',
    # If we're depixelating to another unit.
    target 'maybe<e_unit_type>',
  },
  depixelate_colony {
    stage 'double',
  },

  _features { equality }
}
