/****************************************************************
**{{FILEE}}
*
* Project: Revolution Now
*
* Created by {{NAME}} on {{YEAR}}-{{MONTH}}-{{DATE}}.
*
* Description: Unit tests for the src/{{CURSOR}}{{FILEP}}/{{FILE}}.* module.
*
*****************************************************************/
#include "test/testing.hpp"

// Under test.
#include "src/{{CURSOR}}{{FILEP}}/{{FILE}}.hpp"

// Revolution Now
#include "src/luapp/state.hpp" // FIXME: remove if not needed.

// Must be last.
#include "test/catch-common.hpp"

namespace rn {
namespace {

using namespace std;

// using Catch::Contains;

TEST_CASE( "[{{FILEP}}/{{FILE}}] some test" ) {
  // TODO
}

TEST_CASE( "[{{FILEP}}/{{FILE}}] lua bindings" ) {
  lua::state st;

  auto script = R"(
    local x = 5+6
  )";
  REQUIRE( st.script.run_safe( script ) == valid );

  script = R"(
    local x =
  )";
  auto xp = st.script.run_safe( script );
  REQUIRE( !xp.valid() );
  REQUIRE_THAT( xp.error(), Contains( "unexpected symbol" ) );

  script = R"(
    return 5+8.5
  )";
  REQUIRE( st.script.run_safe<double>( script ) == 13.5 );
}

} // namespace
} // namespace rn
